function entry(int argc, str[] argv) -> int {
	printi(argc);
	prints("Hello world!");

    int tmp;
    tmp = 1 + 2 * 3;
    int tmp2 = double(10 + tmp, return10()) * (10 - 2) - return10();
    printi(tmp2);

	str test = "hallo";
	str test2;
	test2 = "welt";
	prints(test);
	prints(test2);

	test = test2;
	prints(test);

    if 1 {
        prints("yes sir");
		printi(123);
        //if ((1 + 2) > (1 + 0)) {
        //    prints("yes sir 2");
        //}
    }

	if 0 * 10 {
        // prints("yes sir");
		printi(1234);
        //if ((1 + 2) > (1 + 0)) {
        //    prints("yes sir 2");
        //}
    }

    //if !((1 + 2) > (1 + 0)) {
    //    prints("fuck");
    //}

	printi(fib(10));

    return 1;
}

function fib(int n) -> int {
    if n == 0 {
        return n;
	}
	if n == 1 {
        return n;
	}
    return fib(n - 1) + fib(n - 2); 
}

function return10() -> int {
    return 10;
}

function double(int a, int b) -> int {
    return (a + b) * 2;
}

function(assembly) prints(str idk) -> void {
"
	mov rdi, rax
[extern puts]
	call puts
	ret
"
}

function(assembly) printi(int idk) -> void {
"
	mov rdi, .fstr
	mov rsi, rax
[extern printf]
	call printf
	ret
.fstr: db '%d', 10, 0
"
}

function(assembly, noreturn) exit(int error) -> void {
"
    ret
"
}

function(assembly, global) main() -> int {
"
	mov rax, rdi
	mov rbx, rsi
	jmp entry
"
}